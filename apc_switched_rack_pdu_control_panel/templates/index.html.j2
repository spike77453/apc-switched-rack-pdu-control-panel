<!doctype html>
<html lang="en" data-bs-theme="auto">
  <head>
    <script src="{{ url_for('static', filename='js/lib/color-modes.js') }}"></script>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="A Python based Control panel to control multiple APC Switched Rack PDUs via SNMPv3. A single panel to switch (on, off, restart) the attached devices between different states.">
    <meta name="author" content="https://github.com/spike77453">
    <meta name="theme-color" content="#712cf9">
    <title>APC | Switched Rack PDU</title>

  <link rel="stylesheet" href="{{ url_for('static', filename='css/lib/bootstrap.min.css') }}">

   <style>
      .outlet-labels {
        font-size: 23px;
      }
      .form-check-input {
        clear: left;
      }
      .form-switch.form-switch-xl {
        margin-bottom: 2rem;
      }
      .form-switch.form-switch-xl .form-check-input {
        height: 2.4rem;
        width: calc(4rem + 0.75rem);
        border-radius: 5rem;
      }
      .round-btn {
        height: 2.4rem;
        width: 2.4rem;
        border-radius: 50%;
        border: 1px solid;
      }
      .reboot {
        margin-top: -2px;
        margin-left: -16px;
      }
      .pencil {
        width: 200px;
        border: 1px dotted black;
      }
      h1 {
        margin: 0;
          display: inline-block;
      }
      button {
        float: right;
      }
      .bi {
        vertical-align: -.125em;
        fill: currentColor;
      }
      .switch-container {
        width: 160px;
        padding-left: 10px;
      }
   </style>

  </head>
  <body>

  <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="75" height="36" viewBox="0 0 588 280.351" version="1.1">

{% include 'svg_symbols.j2' %}

<div class="col-lg-8 mx-auto p-2 py-md-0">
  <header class="d-flex align-items-center pb-2 pb-sm-0 mb-5 border-bottom">
    <a href="" class="d-flex align-items-center text-body-emphasis text-decoration-none px-2">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="75" height="36" viewBox="0 0 588 280.351" version="1.1">
        <use xlink:href="#apc-logo"/>
      </svg>
        <span class="fs-1 fw-bold ps-2 d-none d-sm-inline text-dark-emphasis">Control Panel</span>
    </a>

    <div class="ms-auto d-flex align-items-center">
    </div>

    <div class="btn-group mx-2">
      <button class="btn btn-outline-secondary dropdown-toggle d-flex align-items-center"
        id="bd-theme"
        type="button"
        aria-expanded="false"
        data-bs-toggle="dropdown"
        aria-label="Toggle theme (auto)">
        <svg class="bi my-1 theme-icon-active" width="1em" height="1em"><use href="#circle-half"></use></svg>
        <span class="visually-hidden" id="bd-theme-text">Toggle theme</span>
      </button>

      <ul class="dropdown-menu dropdown-menu-end dropdown-menu-theme shadow" aria-labelledby="bd-theme-text">
        <li>
        <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="light" aria-pressed="false">
          <svg class="bi me-2 opacity-50 theme-icon" width="1em" height="1em"><use href="#sun-fill"></use></svg>
            Light
          <svg class="bi ms-auto d-none" width="1em" height="1em"><use href="#check2"></use></svg>
        </button>
        </li>
        <li>
        <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="dark" aria-pressed="false">
          <svg class="bi me-2 opacity-50 theme-icon" width="1em" height="1em"><use href="#moon-stars-fill"></use></svg>
            Dark
          <svg class="bi ms-auto d-none" width="1em" height="1em"><use href="#check2"></use></svg>
        </button>
        </li>
        <li>
        <button type="button" class="dropdown-item d-flex align-items-center active" data-bs-theme-value="auto" aria-pressed="true">
          <svg class="bi me-2 opacity-50 theme-icon" width="1em" height="1em"><use href="#circle-half"></use></svg>
            Auto
          <svg class="bi ms-auto d-none" width="1em" height="1em"><use href="#check2"></use></svg>
        </button>
        </li>
      </ul>
    </div>
  </header>

  <main>


{% for pdu in pdus %}
            <div class="container px-4 pt-3 border text-light-emphasis bg-light-subtle border rounded" id="icon-grid">
              <div class="container border-bottom border-bottom-dark">
                <div class="row">

                  <div class="col-6 d-flex">
                    <a href="http://{{ pdu.hostname }}" title="{{ pdu.name }}" data-pdu-id="{{ pdu.hostname }}" target="_blank" rel="noopener noreferrer nofollow" class="text-dark-emphasis text-decoration-none">
                      <h2>{{ pdu.name }}</h2>
                    </a>
                    <span class="mx-2" data-bs-toggle="modal" data-bs-target="#pduName{{ pdu.hostname | hash('md5') }}" >
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16" data-bs-toggle="tooltip" data-bs-placement="top" title="Rename PDU">
                      <use xlink:href="#pencil-fill"/>
                      </svg>
                    </span>
                  </div>

                  <div class="col-6 d-flex flex-row-reverse">
                    <div class="btn-toolbar pb-2 ps-5" role="toolbar" aria-label="Toolbar with button groups">
                      <div class="btn-group me-2" role="group" aria-label="First group">
                        <form>
                          <button type="submit" class="all-outlets-btn btn btn-outline-danger" data-bs-trigger="hover" data-bs-toggle="tooltip" data-bs-placement="top" title="Turn ALL outlets ON">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-toggle-on" viewBox="0 0 16 16">
                              <use xlink:href="#toggle-on"/>
                            </svg>
                          </button>
                          <input type="hidden" name="pdu_hostname" value="{{ pdu.hostname }}">
                          <input type="hidden" name="requested_state" value="ON">
                        </form>
                        <form>
                          <button type="submit" class="all-outlets-btn btn btn-outline-danger" data-bs-trigger="hover" data-bs-toggle="tooltip" data-bs-placement="top" title="Turn ALL outlets OFF">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-toggle-off" viewBox="0 0 16 16">
                              <use xlink:href="#toggle-off"/>
                            </svg>
                          </button>
                          <input type="hidden" name="pdu_hostname" value="{{ pdu.hostname }}">
                          <input type="hidden" name="requested_state" value="OFF">
                        </form>
                        <form>
                          <button type="submit" class="all-outlets-btn btn btn-outline-danger" data-bs-trigger="hover" data-bs-toggle="tooltip" data-bs-placement="top" title="REBOOT ALL outlets">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bootstrap-reboot" viewBox="0 0 16 16">
                              <use xlink:href="#bootstrap-reboot"/>
                            </svg>
                          </button>
                          <input type="hidden" name="pdu_hostname" value="{{ pdu.hostname }}">
                          <input type="hidden" name="requested_state" value="REBOOT">
                        </form>
                      </div>
                    </div>
                  </div>

                </div>
              </div>

              <!-- Modal Rename PDU -->
              <div class="modal fade" id="pduName{{ pdu.hostname | hash('md5') }}" tabindex="-1" aria-labelledby="pduName{{ pdu.hostname | hash('md5') }}Label" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="pduName{{ pdu.hostname | hash('md5') }}Label">Rename PDU</h5>
                      <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <form>
                      <div class="modal-body">
                        <div class="mb-3">
                          <label for="pdu_input_name" class="form-label">PDU Name</label>
                          <input type="text" class="form-control" id="pdu_input_name" name="pdu_input_name" onkeypress="return /^[\x00-\x7F]*$/i.test(event.key)">
                          <input type="hidden" name="pdu_hostname" value="{{ pdu.hostname }}">
                          <div class="form-text">Only ASCII character set allowed</div>
                        </div>
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="save-rename-btn btn btn-primary" data-bs-dismiss="modal">Save</button>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
              <!-- Modal Rename PDU -->

              <div class="row g-4 py-5 row-cols-1 row-cols-md-2 row-cols-lg-4 pb-3">

  {%- for outlet in pdu.outlets %}
                <div class="col d-flex align-items-start">

                  <svg class="bi flex-shrink-0" width="1.75em" height="1.75em" fill="currentColor" data-bs-toggle="tooltip" data-bs-placement="top" title="{{ url_for('outlet', _external=True, pdu_hostname=pdu.hostname, outlet_index=outlet.index, requested_state='TOGGLE') }}" data-clipboard-text="{{ url_for('outlet', _external=True, pdu_hostname=pdu.hostname, outlet_index=outlet.index, requested_state='TOGGLE') }}">
                    <use xlink:href="#outlet"/>
                  </svg>

                  <div>
                    <h4 class="fw-bold mb-0 ms-2 outlet-labels">{{ outlet.name }}</h4>

                    <div class="switch-container" data-pdu-id="{{ pdu.hostname }}" data-outlet-index="{{ outlet.index }}">
                      <div class="row">
                        <div class="col">
                          <form class="form-toggle">
                            <div class="form-check form-switch form-switch-xl">
                              <input class="outlet-checkbox form-check-input" type="checkbox" autocomplete="off" {{ "checked" if outlet.state == "ON" }}>
                              <input type="hidden" name="outlet_index" value="{{ outlet.index }}">
                              <input type="hidden" name="pdu_hostname" value="{{ pdu.hostname }}">
                              <input type="hidden" name="requested_state" value="{{ 'OFF' if outlet.state == 'ON' else 'ON' }}">
                            </div>
                          </form>
                        </div>
                        <div class="col">
                          <form class="form-reboot" {{ "hidden" if outlet.state == "OFF" }}>
                            <div class="form-check pt-1 ps-1">
                              <button type="submit" class="outlet-reboot-btn btn btn-outline-secondary round-btn">
                                <svg xmlns="http://www.w3.org/2000/svg" width="2.75em" height="1.75em" fill="currentColor" class="reboot">
                                  <use xlink:href="#arrow-clockwise"/>
                                </svg>
                              </button>
                              <input type="hidden" name="outlet_index" value="{{ outlet.index }}">
                              <input type="hidden" name="pdu_hostname" value="{{ pdu.hostname }}">
                              <input type="hidden" name="requested_state" value="REBOOT">
                            </div>
                          </form>
                        </div>
                      </div>
                    </div>

                  </div>
                </div>
  {%- endfor %}

              </div>
            </div>

            <br>
{%- endfor %}

  </main>
  <footer class="pt-2 my-1 text-muted border-top">
    &copy; 2021-{{ year }}     <a href="https://github.com/spike77453/apc-switched-rack-pdu-control-panel" title="GitHub" target="_blank" rel="noopener noreferrer nofollow" class="text-muted text-decoration-none">
      <svg class="bi" width="16" height="16"><use xlink:href="#github"/></svg>
    </a>
    | APC Switched Rack PDU Control Panel
  </footer>
</div>

  <script src="{{ url_for('static', filename='js/lib/bootstrap.bundle.min.js') }}"></script>
  <script src="{{ url_for('static', filename='js/lib/clipboard.min.js') }}"></script>

  <!-- Bootstrap Tooltips -->
  <script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })
  </script>

  <!-- https://clipboardjs.com/ -->
  <script>
    new ClipboardJS('.bi');
  </script>

  <script>
    function fetch_post(ev) {
      ev.preventDefault();
      fetch(this.fetch_url, {
        method: 'POST',
        body: new FormData(this.form)
      })
        .then(parseJSON)
        .then(this.response_func);
    }

    function parseJSON(response) {
      return response.json();
    }

    function renamePDU(data) {
      let link = document.querySelector("a[data-pdu-id=" + CSS.escape(data.pdu_hostname) + "]");
      link.title = data.pdu_name;
      link.querySelector("h2").innerHTML = data.pdu_name;
    }

    function updateAllSwitchContainers(data) {
      for (const outlet of data.outlets) {
        outlet.pdu_hostname = data.pdu_hostname;
        updateSwitchContainer(outlet);
      }
    }

    function updateSwitchContainer(data) {
      var switchContainer = document.querySelector("div[data-pdu-id=" + CSS.escape(data.pdu_hostname) + "][data-outlet-index=" + CSS.escape(data.index) + "]");
      updateSwitchContainerItems(switchContainer, data.state);
    }

    function updateSwitchContainerItems(switchContainer, state) {
      switchContainer.querySelector("input.outlet-checkbox").checked = state == 'ON' ? true : false;
      switchContainer.querySelector("form.form-toggle > div > input[name='requested_state']").value = state == 'ON' ? 'OFF' : 'ON';
      switchContainer.querySelector("form.form-reboot").hidden = state == 'ON' ? false : true;
    }

    document.querySelectorAll('.outlet-checkbox').forEach(item => {
      item.fetch_url = {{ url_for('outlet')|tojson }};
      item.response_func = updateSwitchContainer;
      item.addEventListener('change', fetch_post);
    });
    document.querySelectorAll('.outlet-reboot-btn').forEach(item => {
      item.fetch_url = {{ url_for('outlet')|tojson }};
      item.response_func = updateSwitchContainer;
      item.addEventListener('click', fetch_post);
    });
    document.querySelectorAll('.all-outlets-btn').forEach(item => {
      item.fetch_url = {{ url_for('outlets')|tojson }};
      item.response_func = updateAllSwitchContainers;
      item.addEventListener('click', fetch_post);
    });
    document.querySelectorAll('.save-rename-btn').forEach(item => {
      item.fetch_url = {{ url_for('pdu')|tojson }};
      item.response_func = renamePDU;
      item.addEventListener('click', fetch_post);
      item.addEventListener('click', function() {
        {# Manually clear input text fild since we prevented even default#}
        this.form.querySelector("input#pdu_input_name").value = '';
      });
    });
  </script>
  </body>
</html>